package com.example.user.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.user.dto.UserDto;
import com.example.user.jwtutil.JwtTokenUtil;
import com.example.user.service.UserService;

@RestController
@RequestMapping("/api/users")	
public class UserController {

	 @Autowired
	    private UserService userService;

	    @Autowired
	    private JwtTokenUtil jwtTokenUtil;

	    @PostMapping("/register")
	    public ResponseEntity<String> registerUser(@RequestBody UserDto userDto) {
	        // Assuming userDto includes at least username, password, and role
	        UserDto savedUser = userService.save(userDto);
	        return ResponseEntity.ok("User registered successfully!");
	    }

	    @PostMapping("/authenticate")
	    public ResponseEntity<String> authenticateUser(@RequestBody AuthRequest authRequest) {
	        String username = authRequest.getUsername();
	        String password = authRequest.getPassword();

	        if (userService.authenticate(username, password)) {
	            // Authentication successful, generate JWT token
	            UserDto userDto = userService.findByUsername(username);
	            String token = jwtTokenUtil.generateToken(username, userDto.getRole());
	            return ResponseEntity.ok(token);
	        } else {
	            // Authentication failed
	            return ResponseEntity.status(401).body("Invalid credentials");
	        }
	    }
}
