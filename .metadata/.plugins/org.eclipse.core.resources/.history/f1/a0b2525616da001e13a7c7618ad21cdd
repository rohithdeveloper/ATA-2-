package com.example.identity.serviceimpl;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.identity.dto.UserRegistrationDto;
import com.example.identity.entity.UserRegistration;
import com.example.identity.repository.UserRepository;
import com.example.identity.service.AuthService;

@Service
public class AuthServiceImpl implements AuthService {

	@Autowired
	private UserRepository userRepo;

	@Autowired
	private PasswordEncoder passwordEncoder;

	boolean flag;

	@Autowired
	private ModelMapper modelMapper;

	@Override
	public String saveUser(UserRegistrationDto userDto) {
		// TODO Auto-generated method stub
		List<UserRegistration> userList = userRepo.findAll();
		List<UserRegistrationDto> userDtoList = (List<UserRegistrationDto>) modelMapper.map(userList,
				UserRegistrationDto.class);
		if (userDtoList != null) {
			for (UserRegistrationDto user : userDtoList) {
				if (user.getName().equals(userDto.getName())) {
					flag = true;
				} else {
					flag = false;
				}
			}

			if (flag) {
				return "User already exists";
			} else {
				userDto.setPassword(passwordEncoder.encode(userDto.getPassword()));
				userRepo.save(modelMapper.map(userDtoList, UserRegistration.class));
				return "Saved User";
			}
		}
		return "Unable to process registration";

	}

}
